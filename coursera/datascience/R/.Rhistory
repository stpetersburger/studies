df<-data.frame(id)}
else {df<-as.data.frame(rep(id))}
#print(df)
for (f in pollutfiles) {
if (i==1) { t<-data.frame()
t<-read.csv(f,sep=",")
t<-as.data.frame(nrow(na.omit(t)))
names(t)<-"nobs"
i<-i+1
#print(t)
}
else      { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
names(z)<-"nobs"
t<-rbind(t,z)#To join two data frames (datasets) vertically
#print(t)
}
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
print(df,index=FALSE)
}
cc <- complete(directory, 332:1)
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-pollutfiles[id]
pollutfiles<-pollutfiles[order(pollutfiles[1])]
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)}
else {df<-as.data.frame(rep(id))}
#print(df)
for (f in pollutfiles) {
if (i==1) { t<-data.frame()
t<-read.csv(f,sep=",")
t<-as.data.frame(nrow(na.omit(t)))
names(t)<-"nobs"
i<-i+1
#print(t)
}
else      { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
names(z)<-"nobs"
t<-rbind(t,z)#To join two data frames (datasets) vertically
#print(t)
}
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
print(df,index=FALSE)
}
cc <- complete(directory, 332:1)
pollutfiles<-pollutfiles[332:1]
pollutfiles
names(pollutfiles)<-"files"
pollutfiles
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutefiles<-as.data.frame(pollutefiles)
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutefiles<-as.data.frame(pollutfiles)
names(pollutfiles)<-"files"
pollutfiles
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutefiles<-as.data.frame(pollutfiles)
pollutfiles
pollutfiles<-as.character(sort(pollutfiles))
pollutfiles
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-pollutfiles[id]
pollutfiles<-as.character(sort(pollutfiles))
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)}
else {df<-as.data.frame(rep(id))}
#print(df)
for (f in pollutfiles) {
if (i==1) { t<-data.frame()
t<-read.csv(f,sep=",")
t<-as.data.frame(nrow(na.omit(t)))
names(t)<-"nobs"
i<-i+1
#print(t)
}
else      { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
names(z)<-"nobs"
t<-rbind(t,z)#To join two data frames (datasets) vertically
#print(t)
}
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
print(df,index=FALSE)
}
cc <- complete(directory, 332:1)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "id"])
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "id"])
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-sort(pollutfiles,decreasing=FALSE)
pollutfiles<-pollutfiles[id]
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)}
else {df<-as.data.frame(rep(id))}
#print(df)
for (f in pollutfiles) {
if (i==1) { t<-data.frame()
t<-read.csv(f,sep=",")
t<-as.data.frame(nrow(na.omit(t)))
names(t)<-"nobs"
i<-i+1
#print(t)
}
else      { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
names(z)<-"nobs"
t<-rbind(t,z)#To join two data frames (datasets) vertically
#print(t)
}
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
print(df,index=FALSE)
}
set.seed(42)
cc <- complete(directory, 332:1)
use <- sample(332, 10)
print(cc[use, "id"])
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-pollutfiles[id]
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)}
else {df<-as.data.frame(rep(id))}
#print(df)
for (f in pollutfiles) {
if (i==1) { t<-data.frame()
t<-read.csv(f,sep=",")
t<-as.data.frame(nrow(na.omit(t)))
names(t)<-"nobs"
i<-i+1
#print(t)
}
else      { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
names(z)<-"nobs"
t<-rbind(t,z)#To join two data frames (datasets) vertically
#print(t)
}
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
print(df,index=FALSE)
}
set.seed(42)
cc <- complete(directory, 332:1)
use <- sample(332, 10)
print(cc[use, "id"])
set.seed(42)
cc <- complete(directory, 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-pollutfiles[id]
pollutfiles<-as.character(sort(pollutfiles))
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
#i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)
df<-as.character(sort(df))}
else {df<-as.data.frame(rep(id))}
#print(df)
t<-data.frame()
for (f in pollutfiles) { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
t<-rbind(t,z)
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
print(df)
}
set.seed(42)
cc <- complete(directory, 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc <- complete(directory, 332:1)
df<-data.frame(332:1)
df
df<-as.character(sort(df))
df<-df(order[df[1]])
df<-data.frame(332:1)
names(df)<-"id"
df
df<-df[order(df$id)]
df<-df[order[df$id]
df<-df[order[df$id]]
df<-df[order(df$id),]
df
df<-as.data.frame(df[order(df$id),])
names(df)<-"id"
df<-data.frame(332:1)
names(df)<-"id"
df
df[order(df$id),]
df
df<-df[order(df$id),c(1)]
df
class(df)
typeof(df)
df<-as.data.frame(df)
df
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-pollutfiles[id]
pollutfiles<-as.character(sort(pollutfiles))
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
#i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)
names(df)<-"id"
df<-df[order(df$id),c(1)]
df<-as.data.frame(df)}
else {df<-as.data.frame(rep(id))}
#print(df)
t<-data.frame()
for (f in pollutfiles) { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
t<-rbind(t,z)
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
print(df)
}
cc <- complete(directory, 332:1)
set.seed(42)
cc <- complete(directory, 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cc <- complete(directory, 54)
print(cc$nobs)
cr <- corr(directory, 129)
cr
cr<-sort(cr)
cr
n <- length(cr)
n
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
out
corr <- function(directory,threshold=0) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
z<-c()
#print(df)
for (f in pollutfiles) {
t<-data.frame()
t<-read.csv(f,sep=",")
if (nrow(na.omit(t))>threshold) {
t<-na.omit(t)
x=as.vector(t['nitrate'])
y=as.vector(t['sulfate'])
z<-append(z,cor(x,y))}
}
z
}
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr<-corr(directory)
length(cr)
cr <- sort(cr)
set.seed(868)
out <- cr[sample(length(cr), 5)]
out
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- corr("specdata", 2000)
length(cr)
names(df)<-c("id","nobs")
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-pollutfiles[id]
pollutfiles<-as.character(sort(pollutfiles))
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
#i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)
names(df)<-"id"
df<-df[order(df$id),c(1)]
df<-as.data.frame(df)}
else {df<-as.data.frame(rep(id))}
#print(df)
t<-data.frame()
for (f in pollutfiles) { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
t<-rbind(t,z)
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
}
cr <- corr("specdata", 2000)
cr
cr <- corr("specdata", 500)
cr
complete <- function(directory,id=1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-pollutfiles[id]
pollutfiles<-as.character(sort(pollutfiles))
#sum(!is.na(t$sulfate)&!is.na(t$nitrate))
#nrow(na.omit(t))
#i<-1
if(class(id)=="integer"&typeof(id)=="integer") {
df<-data.frame(id)
names(df)<-"id"
df<-df[order(df$id),c(1)]
df<-as.data.frame(df)}
else {df<-as.data.frame(rep(id))}
#print(df)
t<-data.frame()
for (f in pollutfiles) { z<-data.frame()
z<-read.csv(f,sep=",")
z<-as.data.frame(nrow(na.omit(z)))
t<-rbind(t,z)
}
df<-cbind(df,t)
names(df)<-c("id","nobs")
df
}
cr <- corr("specdata", 500)
cr <- corr(directory, 500)
cr
?sprintf
sprintf("%03d", 7)
sprintf("%03d", 10)
sprintf("%03d", 555)
sprintf("%03d", 5555)
sprintf("%+3d", 7)
sprintf("%-3d", 7)
sprintf("% 3d", 7)
getwd()
sprintf("%3d", 7)
pollutantmean(directory,"sulfate",1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
#creating a list of filepaths
pollutfiles<-list.files(directory,pattern="*.csv", full.names=TRUE)
pollutfiles<-sort(pollutfiles,decreasing=FALSE)
pollutfiles<-pollutfiles[id]
#print(pollutfiles)
#merging the content of the filesinto 1 data frame
t<-data.frame()
for (f in pollutfiles) {
z<-data.frame()
z<-read.csv(f,sep=",",header=TRUE)
t<-rbind(t,z)#To join two data frames (datasets) vertically
#https://www.statmethods.net/management/merging.html
#print(i)
}
#get the type of all the columns in the dataset
#sapply(t,class)
mean(t[,c(pollutant)],na.rm=TRUE)
}
pollutantmean(directory,"sulfate",1:10)
x<-list(a=1:5,b=rnorm(10))
x
lapply(x,mean)
?runif
runif(1)
runif(2)
mapply(rep,1:4,1:4)
?gl
?str
swirl()
info()
main()
bye()
swirl()
head(flags)
class(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
library(datatsets)
library(datasets)
data(iris)
?iris
iris
tapply(iris$Sepal.Length, iris$Species, mean)
sapply(iris[,c(1,2,3,4)],mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
data(mtcars)
mtcars
tapply(mtcars$mpg,mtcars$cyl,mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
mean(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$horsepower,mtcars$cyl),avg)
?average
?avg
average(c(1,4))
sapply(split(mtcars$horsepower,mtcars$cyl),mean)
sapply(split(mtcars$hp,mtcars$cyl),average)
sapply(split(mtcars$hp,mtcars$cyl),mean)
dd<-sapply(split(mtcars$hp,mtcars$cyl),mean)
dd
class(dd)
typeof(dd)
dd<-lapply(split(mtcars$hp,mtcars$cyl),mean)
dd
dd[1]
dd<-sapply(split(mtcars$hp,mtcars$cyl),mean)
dd[1]
dd[1]-dd[3]
?round
round(dd[1]-dd[3])
debug(ls)
ls
exit
with(mtcars,tapply(mpg,cyl,mean))
debug()
undebug(ls)
uundebug()
?deebug
?debug
Q
Q
Q
Q
sapply(mtcars,cyl,mean)
