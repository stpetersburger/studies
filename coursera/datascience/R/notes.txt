##Using R

getwd() - get the name of the current working directory (useful for addressing the files stored there by name.ext)

setwd("") - setting the folder

dir() - list the content of the current folder

?FUNCTION - a help about the FUNCTION

source("scripts/myfirstcode.R") - to load the functions from the script myfirstcode.R

ls() shows the functions loaded (from the myfirstcode.R, here)

packageVersion("PACKAGE") - versoion of a package

library(PACKAGE) - load the package

c() - creating a vector ()

<- is the way of equality

TAB works with the first 2 letters of a variable - to check the value

list.files() - list all the files in the current directory

args(FUNCTION) - to check the arguments of the function

##Directories and files

dir.create("FILE") - creating a directory

file.create("NAME") - create file

file.exists("FILE") - check if a file exists

file.info("") - info about the file

file.rename("","") - renaming a file; same as file.copy()

dir.create(file.path("testdir2","testdir3"), recursive=TRUE) - creating nested directories

##Sequences

':' is always of step 1 (seq(along.with = my_seq) - same: the sequence of the length of my_seq with step 1  same as seq_along(my_seq))

rep(0, times=40) - vector of zeros, length 40

a:b, seq(a,b, by=step) - from a to be, incremented with 1

seq(a,b,length=n) - increment here doesn't matter

length() - length of a sequence

rep(c(0,1,2), times=10) - repeating vector

rep(c(0,1,2), each=10) - repeating each number in the vector 10 times

##Vectors

atomic (one data type) and lists

vector<1 - checking if every member of the vector is less than 1: TRUE if yes, FALSE - if no

paste(my_char, collapse = " ") - concatenation of a vector members with a " " in between the members

LETTERS - predefined vector of letters in R

##Missing values

NA - is for missing or not available value (is not a value, but a placeholder)
NaN - not a number

rep(NA,1000); rnorm(1000) - vectors of 1000 values of NA and 1000 random values of a normal distribution

sample(VECTOR, N) - get N random elements of VECTOR

is.na() - if NAs are in vectors

sum(VECTOR) - if VECTOR is of TRUO/FALSE - it will be used as 1/0 - this, sum will give the number of null values

##Vectors

Subsets - VECTOR[n1,n2] - all the elements from element number n1 to element number n2
3
x[is.na(x)], x[!is.na(x)] - vectors of elements: NA and not NA - (x[!is.na(x)&x>0] - all not NA and positive elements)

y[y>0] - vector of all elements > 0

vect<-c(foo=11,bar=2,norf=NA) - name the columns

x[c(-2, -10)] - exclude 2d and 10th elements

names(vect) - to get the names of the vector elements

names(vect2)<-c("foo","bar","norf") - assign names
compare 2 vectors - identical(vect1, vect2)

vect[c("foo","bar")] - get the values of columns foo and bar

##Matrices and Data frames

matrices can contain single type of data; data frames - many different classes of Data

dim(VECTOR)
attributes(VECTOR)

dim(VECTOR)<-c(N1,N2) - assigning attributes

class(VECTOR) - gives a class of the VECTOR

matrix(data,Nlines, Ncols) - create matrix

data.frame(names,data)

colnames(my_data)<-cnames - assigning column names to a data frame

##Control structures

if () else if {} else {}

"LOOP"  for (i in 1:10) {}

for{i in 1:4}; for{i in seq_along}; for{something in VECTOR}

can be nested with ncol, nrow

"WHILE"
evaluation of conditions from left to right
while {something < N} {}

"REPEAT, NEXT, BREAK"

REPEAT is used to use BREAK
NEXT is used to skip a number of iterations if(i<=20) {next}

"FUNCTIONS"

add2<-function(x,y){
      x+y
}

##Logic

1: FALSE && 6 >= 6 || 7 >= 8 || 50 <= 49.5
2: 6 >= -9 && !(6 > 7) && !(!TRUE)
3: FALSE || TRUE && 6 != 4 || 9 > 4
4: !(8 > 4) ||  5 == 5.0 && 7.8 >= 7.79


which()
any()
xor()
| and ||
& and &&
